// CatalogPage.jsx
import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { fetchCampers } from '../../redux/operations';
import SearchBox from '../../components/SearchBox/SearchBox';
import CampersList from '../../components/CampersList/CampersList';
import Loader from '../../components/Loader/Loader';
import FavoritesList from '../../components/FavoritesList/FavoritesList';
import NoResultsMessage from '../../components/NoResultsMessage/NoResultsMessage';
import css from './CatalogPage.module.css';
import { Helmet } from 'react-helmet-async';

const CatalogPage = () => {
  const dispatch = useDispatch();
  const { status, items } = useSelector((state) => state.campers);

  const [searchFilters, setSearchFilters] = useState({
    location: '',
    form: '',
    amenities: [],
    page: 1,
    limit: 10,
  });
  const [visibleCount, setVisibleCount] = useState(10);
  const [isLoadingMore, setIsLoadingMore] = useState(false);
  const [showFavorites, setShowFavorites] = useState(false);

  useEffect(() => {
    dispatch(fetchCampers(searchFilters));
  }, [dispatch, searchFilters]);

  const handleFilterChange = (updatedFilters) => {
    setSearchFilters((prev) => ({
      ...prev,
      ...updatedFilters,
      page: 1,
    }));
  };

  const handlePageChange = (newPage) => {
    setSearchFilters((prev) => ({ ...prev, page: newPage }));
  };

  const handleLoadMore = () => {
    setIsLoadingMore(true);
    setVisibleCount((prevCount) => prevCount + searchFilters.limit);
    setTimeout(() => {
      setIsLoadingMore(false);
    }, 1000);
  };
  const handleResetFilters = () => {
    setSearchFilters({
      location: '',
      form: '',
      amenities: [],
      page: 1,
      limit: 10,
    });
  };

  if (status === 'loading' && !isLoadingMore) return <Loader />;
  // –Ø–∫—â–æ —Å—Ç–∞—Ç—É—Å 'failed' ‚Äì –º–æ–∂–Ω–∞ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –æ–∫—Ä–µ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É (–∞–ª–µ —Ü–µ –æ–∫—Ä–µ–º–∏–π –≤–∏–ø–∞–¥–æ–∫)
  if (status === 'failed')
    return (
      <div className={css.errorMessage}>
        <h2>–£–ø—Å! –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî</h2>
        <p>–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞.</p>
        <p>–ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:</p>
        <ul>
          <li>–ü—Ä–æ–±–ª–µ–º–∏ –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑'—î–¥–Ω–∞–Ω–Ω—è–º</li>
          <li>–°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π</li>
          <li>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É</li>
        </ul>
        <p>–°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–±–æ –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏.</p>
        <button
          onClick={() => window.location.reload()}
          className={css.retryButton}
        >
          üîÑ –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        </button>
      </div>
    );
  // –Ø–∫—â–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–µ–º–∞—î, –ø–æ–∫–∞–∑—É—î–º–æ NoResultsMessage
  if (items && items.length === 0)
    return (
      <NoResultsMessage
        filters={searchFilters}
        onResetFilters={handleResetFilters}
      />
    );

  return (
    <div className={css.catalogContainer}>
      <Helmet>
        <title>Catalog of Campers</title>
      </Helmet>
      <div className={css.filterSection}>
        <SearchBox onCategoryChange={handleFilterChange} />
      </div>
      <button
        className={css.show_fav_btn}
        onClick={() => setShowFavorites((prev) => !prev)}
      >
        {showFavorites ? 'Hide Favorites' : 'Show Favorites'}
      </button>
      {showFavorites && <FavoritesList />}
      <div className={css.listSection}>
        {items && items.length > 0 ? (
          <>
            <CampersList
              filters={searchFilters}
              onPageChange={handlePageChange}
              items={items.slice(0, visibleCount)}
            />
            {visibleCount < items.length && (
              <button
                onClick={handleLoadMore}
                disabled={isLoadingMore}
                className={`${isLoadingMore ? css.loadingButton : ''}`}
              >
                {isLoadingMore ? '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...' : '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —â–µ'}
              </button>
            )}
          </>
        ) : null}
      </div>
    </div>
  );
};

export default CatalogPage;
